@model SignalRService.ViewModels.OrderHostConfigurationViewModel
<script>

    var hostProducList = {

        signalRGroup: "@Model.SinalRGroup",

        initialize: function build_productItemsElement(dataInset, dataAutoDividers, dataFilter) {
            var element = "<div id=\"hostitemswrapper\">" +
                "<ul data-role=\"listview\" data-inset=\"" + dataInset + "\" data-autodividers=\"" + dataAutoDividers + "\" data-filter=\"" + dataFilter + "\" id=\"hostitemlist\">" +
                "<li></li></ul></div>";
            return element;
        },
        createItem: function create_productitem_entry(productData) {
            var element = "<li class=\"productitem\" data-caption=\"" + productData.Name + "\" data-price=\"" + productData.Price + "\" data-itemcnt=\"1\" data-itemid=\"" + productData.Identifier + "\" >";

            if (productData.ImageUrl) {
                element += "<div class=\"primg\"><img src=\"" + productData.ImageUrl + "\"></div>";
            }

            element += "<div class=\"cpwrapper\">" +
                "<div class=\"caption\">" + productData.Name + "</div>" +
                "<div class=\"price\">" + parseFloat(productData.Price).toFixed(2) + "</div>" +
                "</div>";

            if (productData.Description) {
                element += "<div class=\"description\">" + productData.Description + "</div></a>";
            }

            element += "<div class=\"pcommandwrapper\">" +
                "<div class=\"removebtn\"><a onclick=\"removeProduct('" + productData.Identifier + "')\" href=\"#\" class=\"ui-btn ui-corner-all\">@BaseResource.Get("BtnDelete")</a></div>" +
                "</div > " +
                "</li>";
            return element;
        },
        createEditItem: function create_productEditItem() {
            var element = "<div id=\"producteditelement\" data-role=\"popup\" class=\"producteditwrapper\">" +
                "<div data-role=\"fieldcontain\">" +
                "<label for=\"editorcaption\">@BaseResource.Get("ProductTitle")</label>" +
                "<input type=\"text\" id=\"editorcaption\" name=\"caption\" placeholder=\"@BaseResource.Get("ProductTitlePlaceholder")\" />" +
                "</div>" +

                "<label for=\"editorpartnumber\">@BaseResource.Get("PartNumber")</lable>" +
                "<input type=\"text\" id=\"editorpartnumber\" name=\"partnumber\" placeholder=\"@BaseResource.Get("PartnumberPlaceholder")\" />" +

                "<label for=\"editordescription\">@BaseResource.Get("ProductDescription")</label>" +
                "<textarea name=\"description\" id=\"editordescription\" placeholder=\"@BaseResource.Get("ProductDescription")\" >" +
                "</textarea>" +

                "<div data-role=\"fieldcontain\">" +
                "<label for=\"editorprice\">@BaseResource.Get("ProductPrice")</label>" +
                "<input type=\"number\" id=\"editorprice\" name=\"price\"  placeholder=\"@BaseResource.Get("ProductPricePlaceholder") \"  />" +
                "</div>" +
                "<div class=\"savebtn\"><a onclick=\"itemOrderHost.productEditSave('" + hostProducList.signalRGroup + "')\" href=\"#\" class=\"ui-btn ui-corner-all\">@BaseResource.Get("BtnSave")</a></div>" +
                "</div>";
            return element;
        },
        getProduct: function get_product(itemId) {

            var pr;
            $("#hostitemlist").children("*[data-itemid='" + itemId + "']").each(function (idx) {
                    pr = {
                    Id: itemId,
                    Name: $(this).data('caption'),
                    ImgUrl: "",
                    Description: "",
                    Price: $(this).data('price'),
                }
            });
            return pr;
        },
        refresh: function refresh_listItems() {
            $("#hostitemlist").children().remove();
            $(itemOrderHost._data_ProductList).each(function (idx) {
                var newitem = hostProducList.createItem(this);
                $("#hostitemlist").append(newitem);
            });
            $("#hostitemlist").listview();
            $("#hostitemlist").listview('refresh');


        }
    }

    var hostOrderList = {

        createItem: function create_orderitem_entry(orderData) {

            var cdate = new Date(orderData.CreationDate);

            var element = "<li data-icon=\"false\" class=\"hostorderitem\" data-orderid=\"" + orderData.OrderIdentifier + "\" data-state=\"" + orderData.OrderState + "\" >" +
                "<div class=\"orderid\">" + orderData.OrderIdentifier + "</div>" +
                "<div class=\"orderCdate\">" + cdate.toLocaleString() + "</div>" +
                "<div class=\"clientid\">" + orderData.CustomerUser.Name + "</div>";


            element += hostOrderList.createStatusElement(orderData);
            element += hostOrderList.createShippingStatusElement(orderData);
            element += hostOrderList.createPaymentStatusElement(orderData);

            element += hostOrderList.createOrderItemsElement(orderData);
            element += hostOrderList.createOrderProcessElements(orderData);

            var ordertotal = hostOrderList.getOrderTotalFromOrderData(orderData)
            element += "<div class=\"ordertotal\">" + parseFloat(ordertotal).toFixed(2) + "</div>";

            element += "</li>";
            return element;
        },
        createOrderItemsElement: function (orderData) {
            var element = "";
            $(orderData.Items).each(function (idx) {
                element += hostOrderList.createOrderProduct(this.Id, this.Name, this.Amount, this.Price);
            })
            return element;
        },
        getOrderTotalFromOrderData: function (orderData) {
            var ordertotal = 0;
            $(orderData.Items).each(function (idx) {
                ordertotal = ordertotal + this.Amount * this.Price;
            })
            return ordertotal;
        },
        createStatusElement: function create_statusElement(order) {
            var element = "<div class=\"hostorderstate\"><div class=\"orderstatecaption\">@BaseResource.Get("LabelOrderStateText"):</div>";

                switch (order.OrderState) {
                case 0:
                        element += "<div class=\"OrderState0\">@BaseResource.Get("OrderStateUndef")</div>";
                    break;
                case 1:
                        element += "<div class=\"OrderState1\">@BaseResource.Get("OrderStateClientPlacedOrder")</div>";
                        break;
                case 2:
                        element += "<div class=\"OrderState2\">@BaseResource.Get("OrderStateHostConfirmedOrder")</div>";
                        break;
                    case 3:
                        element += "<div class=\"OrderState3\">@BaseResource.Get("OrderStateClientOrderFinished")</div>";
                default:
                    break;
            }

            element += "</div>";
            return element;
        },
                createShippingStatusElement: function (orderdata) {

                    if (orderdata.ShippingState == 0)
                        return "";

            var element = "<div class=\"hostshippingstate\">@BaseResource.Get("LabelShippingStateText"): ";

            switch (orderdata.ShippingState) {
                case 0:
                      element += "@BaseResource.Get("ShippingState0")";
                    break;
                case 1:
                    element += "@BaseResource.Get("ShippingState1")";
                    break;
                case 2:
                    element += "@BaseResource.Get("ShippingState2")";
                    break;
                default:
                    break;
            }

            element += "</div>";
            return element;

        },
        createPaymentStatusElement: function (orderdata) {

            if (orderdata.PaymentState == 0)
                return "";

            var element = "<div class=\"hostpaymentstate\">@BaseResource.Get("LabelPaymentStateText"): ";

            switch (orderdata.PaymentState) {
                case 0:
                      element += "@BaseResource.Get("PaymentState0")";
                    break;
                case 1:
                    element += "@BaseResource.Get("PaymentState1")";
                    break;
                case 2:
                    element += "@BaseResource.Get("PaymentState2")";
                    break;
                default:
                    break;
            }

            element += "</div>";
            return element;
        },
        initialize: function build_oderItemsElement() {
            var element = "<div id=\"hostorderswrapper\">" +
                "<ul data-role=\"listview\" data-filter=\"true\" data-inset=\"true\" id=\"hostorderitemlist\">"; +
                "</ul></div>";
            return element;

        },
        createOrderProduct: function create_orderProduct(itemId, caption, amount, unitPrice)
        {
            var elememt = "<div class=\"orderproduct\">" +
                 "<div class=\"caption\">" + caption + "</div>" +

                 "<div class=\"itemtotal\">" + parseFloat((amount * unitPrice)).toFixed(2) + "</div>" +
                "<div class=\"unitprice\">" + unitPrice + "</div>" +

                "<div class=\"amount\">" + amount + "</div>" +
                "</div>";
            return elememt;
        },
        createOrderProcessElements: function create_orderProcessElements(order)
        {
            var element = "<div class=\"orderprocesswrapper\" id=\"hostorderprocesswrapper\" \">";

            switch (order.OrderState) {
                case 0:
                    break;
                case 1:
                    element += "<div class=\"okbtn\"><a onclick=\"itemOrderHost.processOrder(this)\" href=\"#\" class=\"ui-btn ui-corner-all\">@BaseResource.Get("HostBtnOrderConfirm")</a></div>";
                    element += "<div class=\"nokbtn\"><a onclick=\"itemOrderHost.cancelOrder(this)\" href=\"#\" class=\"ui-btn ui-corner-all\">@BaseResource.Get("HostBtnOrderCancel")</a></div>";
                    break;
                case 2:
                    if (order.ShippingState == 0) {
                        element += "<div class=\"okbtn\"><a onclick=\"itemOrderHost.processOrder(this)\" href=\"#\" class=\"ui-btn ui-corner-all\">@BaseResource.Get("HostBtnShippingLaunch")</a></div>";
                    }
                    if (order.ShippingState == 1) {
                        element += "<div class=\"pemessage\">@BaseResource.Get("WaitingForClientReceiveAck")</div>";
                    }

                    element += "<div class=\"nokbtn\"><a onclick=\"itemOrderHost.cancelOrder(this)\" href=\"#\" class=\"ui-btn ui-corner-all\">@BaseResource.Get("HostBtnOrderCancel")</a></div>";
                    break;
                case 3:
                    break;
            }

            element += "</div>";
            return element;
        },
        refresh : function redraw_items() {

            $('#hostorderitemlist').children().remove();

            $(itemOrderHost._data_OrderList).each(function () {
                $('#hostorderitemlist').append(hostOrderList.createItem(this));
            });
            $('#hostorderitemlist').listview();
            $('#hostorderitemlist').listview("refresh");
        }
        ,
        get_selected_filters: function () {
            var Filters = [];
            return Filters;
        },
        get_selected_sorters: function () {
            var Sorters = [];
            $("#sort-select-orders option:selected").each(function (idx) {
                var asorter = { Expression: $(this).val() };
                Sorters.push(asorter);
            })

            return Sorters;
        }
        
    }

    itemOrderHost = {

        productListTargetSelector: "#hostProductsTab",
        orderListTargetSelector: "#hostTabOrders",

        _data_ProductList: [],
        _data_OrderList: [],

        loadProducts: function load_products() {


            var searchconfig = {
                SearchTerms: $("input[name=searchterms]").val(),
                StartIndex: 0,
                PageSize: 10,
                Sorting: ""
            };

            servicehub.server.getProducts("@Model.SinalRGroup", searchconfig)
                .done(function (productList) {

                    itemOrderHost._data_ProductList = productList;
                    hostProducList.refresh();

                })
                .fail(function () {
                console.log("load_products failed..");
                });


        },
        loadOrders: function load_orders(type) {

            var config = {
                Filters: hostOrderList.get_selected_filters(),
                Sorters: hostOrderList.get_selected_sorters()
            }

            servicehub.server.getOrders(type,"@Model.SinalRGroup",config)
                .done(function (data) {

                    itemOrderHost._data_OrderList = data;
                    hostOrderList.refresh();

                })
                .fail(function () {
                    console.log("load_orders failed...");
                });
        },

        run: function run(appendTo) {


                var plistelement = hostProducList.initialize("false", "false", "false");
                $(itemOrderHost.productListTargetSelector).append(plistelement);

                var productEdit = hostProducList.createEditItem();
            $(itemOrderHost.productListTargetSelector).append(productEdit);

            $("#producteditelement").popup();

                itemOrderHost.loadProducts();

                $('#hostitemlist').listview();
                $('#hostitemlist').listview("refresh");


                var hostorderlist = hostOrderList.initialize();
                $(itemOrderHost.orderListTargetSelector).append(hostorderlist);

                itemOrderHost.loadOrders(2);

        },
        stop: function stop() {
            $('#hostitemswrapper').remove();
            $('#hostorderswrapper').remove();
            $('#hosttotalswrapper').remove();
            $('.producteditwrapper').remove();

        },
        loadJqueryMobile: function load_jqueryMobile() {
            var script = document.createElement("script");
            script.type = "text/javascript";
            script.src = "https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js";    // use this for linked script
            //script.text  = "alert('voila!');"               // use this for inline script
            document.head.appendChild(script);

            var head = document.head;
            var link = document.createElement("link");
            link.type = "text/css";
            link.rel = "stylesheet";
            link.href = "https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css";
            head.appendChild(link);
        },
        orderListAdd: function add_item_to_orderlist(e) {
            var li_item = $(e).parent();

            var itemid = $(e).data("itemid");
            var itemInOrderlist = $("#orderitemlist").find("*[data-itemid=" + itemid + "]");
            if (itemInOrderlist.length > 0) {


                var unitprice = $(e).data("price");
                var countcurr = itemInOrderlist.data("itemcnt");
                countcurr++;
                itemInOrderlist.data("itemcnt", countcurr);

                var price = countcurr * unitprice;
                var pelement = $(itemInOrderlist).find(".price");
                pelement.html(parseFloat(price).toFixed(2));

                var cntelement = $(itemInOrderlist).find(".unitcount");
                cntelement.html(countcurr);

            }
            else {
                var oitem = orderItemList.createOrderItem($(e).data("itemid"), $(e).data("caption"), 1, $(e).data("price"));
                $("#orderitemlist").append(oitem).listview('refresh');
            }

            itemOrderClient.calcTotals();

            servicehub.server.addToCart(itemid, '@Model.SinalRGroup.ToLower()');

        },
        orderListRemove: function remove_item_from_orderlist(e) {
            var itemid = $(e).data("itemid");
            var itemInOrderlist = $("#orderitemlist").find("*[data-itemid=" + itemid + "]");
            if (itemInOrderlist.length > 0) {

                var unitprice = $(e).data("price");
                var countcurr = itemInOrderlist.data("itemcnt");
                countcurr--;

                if (countcurr == 0) {
                    $(itemInOrderlist).parent().remove();
                }

                itemInOrderlist.data("itemcnt", countcurr);

                var price = countcurr * unitprice;
                var pelement = $(itemInOrderlist).find(".price");
                pelement.html(parseFloat(price).toFixed(2));

                var cntelement = $(itemInOrderlist).find(".unitcount");
                cntelement.html(countcurr);
            }
            itemOrderClient.calcTotals();
        },
        calcTotals: function calculate_totals() {
            var total = 0;
            var orderitems = $("#orderitemlist").children(".orderitem");
            $(orderitems).each(function (idx) {

                var unitprice = $(orderitems[idx]).children().first().data('price');
                var amount = $(orderitems[idx]).children().first().data('itemcnt');
                total = total + (unitprice * amount);
            });
            $('.totaldetails').data("sum", total);
            $('.totaldetails .price').html(parseFloat(total).toFixed(2));
        },
        productEditSave: function save_prodct(group) {
            var product = itemOrderHost.getProductFromInput();


            var stageRes = servicehub.server.stageProduct(product, group)
                .done(function (data) {
                    if (!data.ErrorMessage) {
                        //ok no errors
                        console.log("product successfuly staged..");
                    }
                    else {
                        showMessageDailog(data.ErrorMessage, "body");
                    }
                })
                .fail(function (data) {
                    console.log("Request stageProduct failed...");
                });

        },
        productRemove: function remove_product(id) {
            $("*[data-itemid='" + id + "']").parent().remove();

        },
        getProductFromInput: function get_product_from_input() {

            var product = {
                Id: 0,
                Name: $('.producteditwrapper').find("input[name=caption]").val(),
                Description: $('.producteditwrapper').find("textarea[name=description]").val(),
                Price: $('.producteditwrapper').find("input[name=price]").val(),
                PartNumber: $('.producteditwrapper').find("input[name=partnumber]").val()
            }
            return product;
        },
        processOrder: function processOrder(e) {

                var Order = {
                    OrderIdentifier: $(e).closest('.hostorderitem').data("orderid"),
                    Items: null
                };

            if (!Order.OrderIdentifier) {
                console.log("processOrder -> could not find orderidentifier...");

            } else {
                console.log("processOrder - sending orderData");

                var res = servicehub.server.processOrder(Order, "@Model.SinalRGroup");
                res.done(function (orderData) {
                    console.log("processOrder - processed -> ident: " + orderData.OrderIdentifier + " state: " + orderData.OrderState);
                }).fail(function () {
                    console.log("failed request processOrder...");
                });
            }
        },

        orderUpdate: function update_order(orderData) {
            //find in orderlist , update it, redraw
            var dataIndex = itemOrderHost._data_OrderList.findIndex(x => x.OrderIdentifier === orderData.OrderIdentifier);
            if (dataIndex == -1)
            {
                itemOrderHost._data_OrderList.push(orderData);
            }
            else {
                itemOrderHost._data_OrderList[dataIndex] = orderData;

            }
            hostOrderList.refresh();
            console.log("updating orderdata");
        }
    };

    function removeProduct(id) {
        servicehub.server.removeProduct(id,"@Model.SinalRGroup");
    }

    function OrdersSortSelectionChanged(event, ui) {
        itemOrderHost.loadOrders(2);
    }



</script>

<div data-role="tabs" id="hosttabs">
    <div data-role="navbar">
        <ul>
            <li><a href="#hostProductsTab" data-ajax="false">@BaseResource.Get("HostProductsTab")</a></li>
            <li><a href="#hostTabOrders" data-ajax="false">@BaseResource.Get("HostOrdersTab")</a></li>
            <li><a href="#hostDeliveryMap" data-ajax="false">@BaseResource.Get("HostDeliveryMapTab")</a></li>
        </ul>
    </div>
    <div id="hostProductsTab" class="ui-body-d ui-content">
        <div class="search"><input name="searchterms" type="text" value="" onkeydown="itemOrderHost.loadProducts()" /></div>
        <div class="cntrls" data-role="controlgroup" data-type="horizontal" data-mini="true">
            <a href="#producteditelement" data-rel="popup" class="ui-shadow ui-btn ui-corner-all ui-btn-icon-left ui-icon-plus ui-btn-b">@BaseResource.Get("BtnProductAdd")</a>
        </div>
    </div>
    <div id="hostTabOrders">

        <div class="filterconfwrapper">
            @Html.Raw(SignalRService.Utils.OrderUtils.Get_SortSelector_Orders())
        </div>
    </div>
    <div id="hostDeliveryMap"> @Html.Partial("DeliveryMap")  </div>
</div>



<style>

    .highlight {
        -webkit-box-shadow: 6px 4px 5px 0px rgba(31,101,222,1);
        -moz-box-shadow: 6px 4px 5px 0px rgba(31,101,222,1);
        box-shadow: 6px 4px 5px 0px rgba(31,101,222,1);
    }

    .orderdetailsitem .item {
        display: inline-block;
    }

    .orderdetailsitem .unitprice {
        display: inline-block;
    }

    .orderdetailsitem .amount {
        display: inline-block;
    }

    .orderdetailsitem .price {
        display: inline-block;
    }

    .orderitem {
    }

        .orderitem .caption {
            display: inline-block;
        }

    .productitem .caption {
        display: inline-block;
        font-size: 1.2em;
    }

    .orderitem .price {
        float: right;
        margin-left: 5px;
        font-size: 1.2em;
    }

    .productitem .price {
        float: right;
        margin-left: 5px;
        font-size: 1em;
    }

    .productitem .description {
        display: inline-block;
        font-size: 0.8em;
    }


    .orderitem .pricedetails {
        float: right;
        font-size: 0.8em;
    }

    .orderitem .unitcount {
    }

    .orderitem .unitprice {
        display: inline-block;
        margin-left: 5px;
    }

    .unitcount::after {
        content: "x";
    }

    .unitprice::after {
        content: "€"
    }

    .price::after {
        content: "€"
    }

    .totaldetails .description {
        display: inline-block;
        font-size: 1.5em;
    }

    .totaldetails .price {
        float: right;
        margin-left: 5px;
        font-size: 2em;
    }

    /*orderproduct*/
    .orderproduct {
        display: table;
        width: 100%;
    }

        .orderproduct .caption {
            float: left;
        }

        .orderproduct .amount {
            float: right;
            font-size: smaller;
        }

            .orderproduct .amount::after {
                content: " x";
            }

        .orderproduct .unitprice {
            float: right;
            font-size: smaller;
            margin-left: 3px;
        }

        .orderproduct .itemtotal {
            float: right;
            margin-left: 5px;
        }

            .orderproduct .itemtotal::after {
                content: "€";
            }


    .hostorderitem .orderCdate {
        display: inline-block;
    }

    .hostorderitem .orderid {
        float: right;
        overflow: hidden;
        width: 60px;
    }

    .hostorderitem .ordertotal {
        font-size: 1.2em;
        float: right;
    }

        .hostorderitem .ordertotal::after {
            content: "€";
        }

    .hostorderitem .status {
        display: inline-block;
    }

        .hostorderitem .status::after {
            content: " >>";
        }

    .hostorderitem .nextstatus {
        float: right;
    }

    .hostorderstate {
        height: 20px;
        width: 80px;
    }


    .orderstatecaption {
        float: left;
        margin-right: 3px;
    }

    .primg img {
        width: 100%;
    }

    .search {
        position: fixed;
        top: -6px;
        right: 2px;
        z-index: 100;
    }

    h4 {
        margin-top: 45px;
        margin-bottom: 12px;
        margin-left: 2px;
    }

    .cntrls {
        position: absolute;
        top: -40px;
        right: -3px;
    }
</style>