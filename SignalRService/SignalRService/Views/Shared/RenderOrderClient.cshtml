@model SignalRService.ViewModels.OrderClientConfigurationViewModel
<script>

    var totalsBox = {

        initialize: function build_totalsElement(appendTo) {
            var element = "<div id=\"totalswrapper\">" +
                "<div class=\"totaldetails\">" +
                "<div class=\"description\">total</div>" +
                "<div class=\"price\">0.00</div>" +
                "</div>" +
                totalsBox.createBuyButton() +
                "</div>";

            return element;
        },
        createBuyButton: function build_BuyButton() {
            var element = "<a href=\"#\" onclick=\"btnBuyClicked()\" class=\"ui-btn ui-btn-inline ui-icon-delete ui-btn-icon-left\">Bestellen</a>";
            return element;
        },
        calcTotals: function calculate_totals() {
            var total = 0;
            var orderitems = $("#orderitemlist").children(".orderitem");
            $(orderitems).each(function (idx) {

                var unitprice = $(orderitems[idx]).data('price');
                var amount = $(orderitems[idx]).data('itemcnt');
                total = total + (unitprice * amount);
            });
            $('#totalswrapper .totaldetails').data("sum", total);
            $('#totalswrapper .totaldetails .price').html(parseFloat(total).toFixed(2));
        },
    }

    var productItemList = {

        initialize: function build_productItemsElement(dataInset, dataAutoDividers, dataFilter) {
            var element = "<div id=\"customeritemswrapper\">" +
                "<ul data-role=\"listview\" data-inset=\"" + dataInset + "\" data-autodividers=\"" + dataAutoDividers + "\" data-filter=\"" + dataFilter + "\" id=\"customeritemlist\">" +
                "<li></li></ul></div>";

            return element;
        },
        createItem: function create_productitem_entry(itemId, thumbnailSrc, caption, description, price) {
            var element = "<li class=\"productitem\" data-caption=\"" + caption + "\" data-price=\"" + price + "\" data-itemcnt=\"1\" data-itemid=\"" + itemId + "\">" +
                "<a href=\"#\" onclick=\"itemOrderClient.orderListAdd(this)\">" +
                "<img src=\"" + thumbnailSrc + "\">" +
                "<div class=\"cpwrapper\">" +
                    "<div class=\"caption\">" + caption + "</div>" +
                    "<div class=\"price\">" + parseFloat(price).toFixed(2) + "</div>" +
                "</div>" +
                "<div class=\"description\">" + description + "</div>" +
                "</a>" +
                "</li>";
            return element;
        }
    }

    var orderItemList = {

        initialize: function build_oderItemsElement(dataInset, dataAutoDividers, dataFilter) {
            var element = "<div id=\"orderswrapper\">" +
                "<ul data-role=\"listview\" data-inset=\"" + dataInset + "\" data-autodividers=\"" + dataAutoDividers + "\" data-filter=\"" + dataFilter + "\" id=\"orderitemlist\">" +
                //"<li></li>" +
                "</ul></div>";
            return element;
        },
        createOrderItem: function create_orderitem_entry(itemId, caption, amount, unitprice) {
            var element = "<li data-price=\"" + unitprice + "\" data-itemcnt=\"" + amount + "\" data-itemid=\"" + itemId + "\"  data-icon=\"false\" class=\"orderitem\" >" +
                "<div class=\"caption\">" + caption + "</div>" +
                "<div class=\"price\">" + amount * unitprice + "</div>" +
                "<div class=\"pricedetails\">" +
                "<div class=\"unitcount\">1</div>" +
                "<div class=\"unitprice\">" + unitprice + "</div>" +
                "</div>" +
                "<a href=\"#\" onclick=\"itemOrderClient.orderListRemove(this)\">btnRemove" +
                "</a>" +
                "</li>";
            return element;
        },
        getOrderItems: function get_orderItems() {
            var itemList = [];
            $('#orderitemlist').children().each(function (idx) {

                var oitem = {
                    ItemId: $(this).data("itemid"),
                    Amount: $(this).data("itemcnt")
                }
                itemList.push(oitem);
            });
            return itemList;
        }
       

    }

    var placedOrderList = {

        createItem: function create_orderitem_entry(statusData) {
            var element = "<li data-icon=\"false\" class=\"clientorderitem\" data-orderid=\"" + statusData.Order.OrderId + "\" data-state=\"" + statusData.Order.State + "\" data-clientId=\"" + statusData.Order.ClientConnectionId + "\" >" +
                "<div class=\"orderid\">" + statusData.Order.OrderId + "</div>" +
                "<div class=\"hosttid\">" + statusData.Order.HostConnectionId + "</div>";

            var ordertotal = 0;
            $(statusData.Order.Items).each(function (idx) {
                var stagedProduct = hostProducList.getProduct(this.ItemId);
                element += placedOrderList.createOrderProduct(this.ItemId, stagedProduct.Name, this.Amount, stagedProduct.Price);
                ordertotal = ordertotal + this.Amount * stagedProduct.Price;
            })

            element += placedOrderList.createStatusElement(statusData.Order)
            element += placedOrderList.createOrderProcessElements();
            element += "<div class=\"ordertotal\">" + parseFloat(ordertotal).toFixed(2) + "</div>";
            element += "</li>";

            return element;
           
        },
        createOrderProduct: function create_orderProduct(itemId, caption, amount, unitPrice) {
            var elememt = "<div class=\"orderproduct\">" +
                "<div class=\"caption\">" + caption + "</div>" +

                "<div class=\"itemtotal\">" + parseFloat((amount * unitPrice)).toFixed(2) + "</div>" +
                "<div class=\"unitprice\">" + unitPrice + "</div>" +

                "<div class=\"amount\">" + amount + "</div>" +
                "</div>";
            return elememt;
        },
        createStatusElement: function create_statusElement(order) {
            var element = "<div class=\"statuswrapper\" id=\"hostorderstatus\">" +
                "<div class=\"status\">" + order.StateString + "</div>" +
                "<div class=\"nextstatus\">" + order.NextStateString + "</div>" +
                "</div>";
            return element;
        },
        createOrderProcessElements: function create_orderProcessElements() {
            var element = "<div class=\"orderprocesswrapper\" id=\"clientorderprocesswrapper\" \">" +
                "<div class=\"nokbtn\"><a onclick=\"orderProcessNotOkClicked(this)\" href=\"#\" class=\"ui-btn ui-corner-all\">nicht OK</a></div>" +
                "<div class=\"okbtn\"><a onclick=\"orderProcessOkClicked(this)\" href=\"#\" class=\"ui-btn ui-corner-all\">OK</a></div>" +
                "</div>";
            return element;
        },
        initialize: function build_oderItemsElement() {
            var element = "<div id=\"clientorderswrapper\">" +
                "<ul data-role=\"listview\" data-inset=\"true\" id=\"clientorderitemlist\">"; +
                    "</ul></div>";
            return element;
        }
    }

    var itemOrderClient = {

        loadProducts: function load_products() {

            servicehub.server.requestStageList('@Model.SinalRGroup');

        },
        run: function run(appendTo) {


            if ($(appendTo).length == 0) {
                console.log("could not find item: " + appendTo + " aborting orderclient");
            }
            else {

                var itemlistElement = productItemList.initialize("true", "false", "false");
                $(appendTo).append(itemlistElement);
                $('#customeritemlist').listview();
                $('#customeritemlist').listview("refresh");

                var orderlistElement = orderItemList.initialize("true", "false", "false");
                $(appendTo).append(orderlistElement);
                $('#orderitemlist').listview();
                $('#orderitemlist').listview("refresh");

                var totalsElement = totalsBox.initialize();
                $(appendTo).append(totalsElement);

                var placedOrderElement = placedOrderList.initialize();
                $(appendTo).append(placedOrderElement);

            }
             
          
            itemOrderClient.loadProducts();
        },
        stop: function stop() {
            $('#customeritemswrapper').remove();
            $('#orderswrapper').remove();
            $('#totalswrapper').remove();
        },
        loadJqueryMobile: function load_jqueryMobile() {
            var script = document.createElement("script");
            script.type = "text/javascript";
            script.src = "https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.js";    // use this for linked script
            //script.text  = "alert('voila!');"               // use this for inline script
            document.head.appendChild(script);

            var head = document.head;
            var link = document.createElement("link");
            link.type = "text/css";
            link.rel = "stylesheet";
            link.href = "https://code.jquery.com/mobile/1.4.5/jquery.mobile-1.4.5.min.css";
            head.appendChild(link);
        },
        orderUpdate: function update_order(orderData) {
            //find statusbox for this order and update

            var orderItem = placedOrderList.createItem(orderData);
            $('#clientorderitemlist').append(orderItem);
            $('#clientorderitemlist').listview();
            $('#clientorderitemlist').listview("refresh");

            console.log("updating orderdata");
        },
        orderListAdd: function add_item_to_orderlist(e) {
            var li_item = $(e).parent();
            var itemid = $(li_item).data("itemid");
            var itemInOrderlist = $("#orderitemlist").find("*[data-itemid=" + itemid + "]");
          
            if (itemInOrderlist.length > 0) {


                var unitprice = $(li_item).data("price");
                var countcurr = itemInOrderlist.data("itemcnt");
                countcurr++;
                itemInOrderlist.data("itemcnt", countcurr);

                var price = countcurr * unitprice;
                var pelement = $(itemInOrderlist).find(".price");
                pelement.html(parseFloat(price).toFixed(2));

                var cntelement = $(itemInOrderlist).find(".unitcount");
                cntelement.html(countcurr);

            }
            else {
               
                var oitem = orderItemList.createOrderItem($(li_item).data("itemid"), $(li_item).data("caption"), 1, $(li_item).data("price"));
                $("#orderitemlist").append(oitem).listview('refresh');
            }

            totalsBox.calcTotals();
   
            servicehub.server.addToCart(itemid, '@Model.SinalRGroup.ToLower()');

        },
        orderListRemove: function remove_item_from_orderlist(e) {
            var itemid = $(e).data("itemid");
            var itemInOrderlist = $("#orderitemlist").find("*[data-itemid=" + itemid + "]");
            if (itemInOrderlist.length > 0) {

                var unitprice = $(e).data("price");
                var countcurr = itemInOrderlist.data("itemcnt");
                countcurr--;

                if (countcurr == 0) {
                    $(itemInOrderlist).parent().remove();
                }

                itemInOrderlist.data("itemcnt", countcurr);

                var price = countcurr * unitprice;
                var pelement = $(itemInOrderlist).find(".price");
                pelement.html(parseFloat(price).toFixed(2));

                var cntelement = $(itemInOrderlist).find(".unitcount");
                cntelement.html(countcurr);
            }
            itemOrderClient.calcTotals();
        },
        
        placeOrder: function place_order(group) {
            //get orderitems from orderlist
            var orderItems = orderItemList.getOrderItems();
            var order = {
                OrderId: makeid(),
                Items : orderItems,
                State : 1,
                ClientConnectionId : servicehub.connection.id,
                HostConnectionId : ""
            };

            var orderStatusData = {
                OrderState: 1,
                NextOrderState: 0,
                OrderStateString: "ClientPlacedOrder",
                NextStateString: "",
                Message: "",
                Order: order
            }

            //send signalR order-placement
            var res = servicehub.server.processOrder(orderStatusData, group);
            res.done(function (orderData) {

                itemOrderClient.orderUpdate(orderData);
                console.log("updating orderstatus...");

            }).fail(function () {
                console.log("failed request placeOrder...");
            });
        },
        orderProcessOkClicked: function processPlacedOrder(e) {
            //find the orderelement - send it back for staus-change
        }


    };



    function btnBuyClicked(e) {
        //find its data - place order and update item 
       
        itemOrderClient.placeOrder("@Model.SinalRGroup");
    }

</script>

<style>

    /* style for productitem-clientlist*/
    .productitem {
        border-radius: 5px 5px 5px 5px;
        -moz-border-radius: 5px 5px 5px 5px;
        -webkit-border-radius: 5px 5px 5px 5px;
        border: 0px solid #000000;

        -webkit-box-shadow: 2px 2px 2px 2px rgba(0,0,0,0.75);
        -moz-box-shadow: 2px 2px 2px 2px rgba(0,0,0,0.75);
        box-shadow: 2px 2px 2px 2px rgba(0,0,0,0.75);
    }

    .highlight {
        -webkit-box-shadow: 6px 4px 5px 0px rgba(31,101,222,1);
        -moz-box-shadow: 6px 4px 5px 0px rgba(31,101,222,1);
        box-shadow: 6px 4px 5px 0px rgba(31,101,222,1);
    }

    .orderdetailsitem .item {
        display: inline-block;
    }

    .orderdetailsitem .unitprice {
        display: inline-block;
    }

    .orderdetailsitem .amount {
        display: inline-block;
    }

    .orderdetailsitem .price {
        display: inline-block;
    }

    .orderitem {
    }

        .orderitem .caption {
            display: inline-block;
        }

    .productitem .caption {
        display: inline-block;
        font-size: 1.2em;
    }

    .orderitem .price {
        float: right;
        margin-left: 5px;
        font-size: 1.2em;
    }

    .productitem .price {
        float: right;
        margin-left: 5px;
        font-size: 1em;
    }

    .productitem .description {
        display: inline-block;
        font-size: 0.8em;
    }


    .orderitem .pricedetails {
        float: right;
        font-size: 0.8em;
    }

    .orderitem .unitcount {
    }

    .orderitem .unitprice {
        display: inline-block;
        margin-left: 5px;
    }

    .unitcount::after {
        content: "x";
    }

    .unitprice::after {
        content: "€"
    }

    .price::after {
        content: "€"
    }

    .totaldetails .description {
        display: inline-block;
        font-size: 1.5em;
    }

    .totaldetails .price {
        float: right;
        margin-left: 5px;
        font-size: 2em;
    }
</style>