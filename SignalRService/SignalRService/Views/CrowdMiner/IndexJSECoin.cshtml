@model SignalRService.ViewModels.ServiceSettingViewModel

@{
    ViewBag.Title = "MiningRoomTitle";
}

<style>

    .updateValueFont {
        color: blue;
        -webkit-transition: color 1s;
        -moz-transition: color 1s;
        -o-transition: color 1s;
        transition: color 1s;
    }

    .normalValueFont {
        color: black;
        -webkit-transition: color 1s;
        -moz-transition: color 1s;
        -o-transition: color 1s;
        transition: color 1s;
    }


    .updateValueFontFast {
        color: blue;
        -webkit-transition: color 1s;
        -moz-transition: color 0.1s;
        -o-transition: color 0.1s;
        transition: color 0.1s;
    }

    .normalValueFontFast {
        color: black;
        -webkit-transition: color 1s;
        -moz-transition: color 1s;
        -o-transition: color 1s;
        transition: color 1s;
    }

    .showControls {
    }

    .culturewrapper {
        float: right;
    }

    .controlelement {
        width: 400px;
        float: left;
    }

    .addRoomCntrl {
        visibility: hidden;
        width: 400px;
    }

    .youstatswrapper {
        visibility: hidden;
    }

    #debugDiv {
        height:200px;
        width:100%;
        border:1px solid;
        overflow:scroll;
        padding:2px;
        font-size:smaller;
        
    }

</style>

<script>

    $(function () {

        loadXMRPrices();
        setInterval(function () { loadXMRPrices() }, @SignalRService.Utils.GeneralSettingsUtils.GetSettingValue(SignalRService.Enums.EnumGeneralSetting.LoadXMRPriceIntervalMs));

          @{
              if (SignalRService.Utils.ServiceUtils.IsServiceOwner(Model.Id, User.Identity.Name))
              {
                <text>
                //load markdown editor
                editor = $("textarea.mdd_editor").MarkdownDeep({
                    help_location: "/Scripts/mdd_help.htm",
                    disableTabHandling: true
                });
                </text>
              }
           }

              });

    servicehub = null;

                @if (Model != null)
                {
                    <text>
    				signalRGroup = "@Model.CrowdMinerConfigurationViewModel.SignalRGroup";
                    </text>
                }

            servicehub = $.connection.serviceHub;
            $.connection.hub.url = "/signalr";


            $.connection.hub.start().done(function () {

                 @if (Model != null)
                 {
                     <text>
                    servicehub.server.joinGroup("@Model.CrowdMinerConfigurationViewModel.SignalRGroup");
                    </text>
                 }

                setInterval(function () { youMinerStatsTick() }, 1000);




    });

    servicehub.client.updateMinigRoomOverView = function (data) {
        updateRoomOverviewDomElements(data);
    }

    servicehub.client.updateGroupConnections = function (data) {
        updateGroupConnectionsDomElement(data);
    }


    $.connection.hub.error(function (error) {
        console.log('SignalR error: ' + error)
    });


    function youMinerStatsTick() {
        @*if (myminer) {

            if (myminer.getTotalHashes() == 0)
                return;

            toggle_update_styles_fast($('#youHps'));
            $('#youHps').text(myminer.getHashesPerSecond().toFixed(2));

            toggle_update_styles_fast($('#youHashes'));
            $('#youHashes').text(myminer.getTotalHashes());


            @{
                var payout1M = SignalRService.Utils.GeneralSettingsUtils.GetSettingValue(SignalRService.Enums.EnumGeneralSetting.CoinImpXMRPayoutPer1MHashes);
            }

            var payoutPer1MHs = "@Html.Raw(payout1M)";
            payoutPer1MHs = parseFloat(payoutPer1MHs.replace(",", "."));
            var pp1h = parseFloat(payoutPer1MHs / 1000000).toFixed(20);
            var yourxmrval = (myminer.getTotalHashes() * pp1h).toFixed(16);

            toggle_update_styles_fast($('#YouXMRMined'));
            $('#YouXMRMined').text(yourxmrval);

            toggle_update_styles_fast($('#YourXMRMinedWorthBTC'));
            $('#YourXMRMinedWorthBTC').text((xmrPriceInfo.BTC * yourxmrval).toFixed(16));

            toggle_update_styles_fast($('#YourXMRMinedWorthEUR'));
            $('#YourXMRMinedWorthEUR').text((xmrPriceInfo.EUR * yourxmrval).toFixed(16));

            toggle_update_styles_fast($('#YourXMRMinedWorthUSD'));
            $('#YourXMRMinedWorthUSD').text((xmrPriceInfo.USD * yourxmrval).toFixed(16));

        }*@
    }


    function updateGroupConnectionsDomElement(data) {
        toggle_update_styles_fast($('#nrOfOthers'));
        $('#nrOfOthers').text(data);
    }

    function toggle_update_styles(element) {

        element.removeClass("normalValueFont");
        element.addClass("updateValueFont");

        setTimeout(function() {

            element.removeClass("updateValueFont");
            element.addClass("normalValueFont");

        }, 1000);

    }

    function toggle_update_styles_fast(element) {

        element.removeClass("normalValueFontFast");
        element.addClass("updateValueFontFast");

        setTimeout(function () {

            element.removeClass("updateValueFontFast");
            element.addClass("normalValueFontFast");

        }, 500);
    }


    var currentRoomOverViewData;
    function updateRoomOverviewDomElements(data) {


          @{
              var description = BaseResource.Get("MiningRoomRoomId_" + Model.CrowdMinerConfigurationViewModel.Id + "_description");
              var md = new MarkdownDeep.Markdown();
              md.NewWindowForExternalLinks = true;
              md.NewWindowForLocalLinks = true;
              md.SafeMode = true;

            }

        currentRoomOverViewData = data;

        toggle_update_styles($('#JSEMined'));
        $('#JSEMined').text(data.Balance);

        var worthEUR = xmrPriceInfo.EUR * data.XMR_Mined;
        var worthUSD = xmrPriceInfo.USD * data.XMR_Mined;
        var worthBTC = xmrPriceInfo.BTC * data.XMR_Mined;

        toggle_update_styles($('#JSEMinedWorthBTC'));
        $('#JSEMinedWorthBTC').text(worthBTC.toFixed(9));

        toggle_update_styles($('#JSEMinedWorthEUR'));
        $('#JSEMinedWorthEUR').text(worthEUR.toFixed(9));

        toggle_update_styles($('#JSEMinedWorthUSD'));
        $('#JSEMinedWorthUSD').text(worthUSD.toFixed(9));


    }

        @{
            if (SignalRService.Utils.ServiceUtils.IsServiceOwner(Model.Id, User.Identity.Name))
            {
                <text>





            function editorSave() {
                var markdowndata = $("textarea.mdd_editor").MarkdownDeep().data();
                var mdstring = markdowndata.mdd.X;

                var request = CreateRequest(@Model.Id, @Model.CrowdMinerConfigurationViewModel.Id, "UpdateDescription", { Content: mdstring, Culture: "@SignalRService.Utils.CultureHelper.GetCurrentCulture()" });
                servicehub.server.generalHubIncoming(request);
            }



                </text>
            }
         }



    var xmrPriceInfo = { "BTC": 0.0, "USD": 0.0, "EUR": 0.0 };
    function loadXMRPrices() {

        $.ajax({
            url: "https://min-api.cryptocompare.com/data/price?fsym=XMR&tsyms=BTC,USD,EUR",
            context: document.body
        }).done(function (data) {
            xmrPriceInfo = data;
        });
        //

    }


    function CreateRoomBtnClicked() {
        $("#addRoomCtrl").css('visibility', 'visible');
        componentHandler.upgradeDom();

    }

    

    function CreateRequest(serviceId, roomId, command, data)
    {

        var RequestData = {
            MiningRoomId: roomId,
            Command: command,
            CommandData: data
        };

        var request = {
            RequestData: RequestData,
            ServiceId: serviceId
        };

        return request;
    }



    @{
        if (SignalRService.Utils.ServiceUtils.IsServiceOwner(Model.Id, User.Identity.Name))
        {
        <text>

        if (typeof console != "undefined")
            if (typeof console.log != 'undefined')
                console.olog = console.log;
            else
                console.olog = function () { };

        console.log = function (message) {
            console.olog(message);
            $('#debugDiv').append('<p>' + message + '</p>');
        };
        console.error = console.debug = console.info = console.log

        </text>
        }
    }




</script>



@Html.Partial("LanguageSelector")
<div class="userinfowrapper showControls">@Html.Partial("UserInfoPartial")</div>




<!-- other users Chip -->
<div class="mdl-chip mdl-chip--contact showControls">
    <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
        <i title="@BaseResource.Get("TitleOtherUsersinRoom")" class="fas fa-users"></i>
    </div>
    <div class="mdl-chip__text">
        <div id="nrOfOthers">1</div>
    </div>
</div>



<div class="youstatswrapper">


    <!-- youHps Chip -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleYouHps")" class="fab fa-galactic-senate"></i>
        </div>
        <div class="mdl-chip__text">
            <div id="youHps">0</div>
        </div>
    </div>

    <!-- youHashes Chip -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleYouHashes")" class="far fa-heart"></i>
        </div>
        <div class="mdl-chip__text">
            <div id="youHashes">0</div>
        </div>
    </div>

    <!-- YouXMRMined Chip -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleYouXMRMined")" class="fab fa-monero"></i>
        </div>
        <div class="mdl-chip__text">
            <div id="YouXMRMined">0</div>
        </div>
    </div>

    <!-- You XMR worth BTC -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleXMRWorthBitcoin")" class="fab fa-bitcoin"></i>
        </div>
        <div class="mdl-chip__text">
            <div id="YourXMRMinedWorthBTC">0</div>
        </div>
    </div>

    <!-- your ~XMR worth EUR -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleXMRWorthEUR")" class="fas fa-euro-sign"></i>
        </div>
        <div class="mdl-chip__text">
            <div id="YourXMRMinedWorthEUR">0</div>
        </div>
    </div>

    <!-- XMR worth USD -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleXMRWorthUSD")" class="fas fa-dollar-sign"></i>
        </div>
        <div class="mdl-chip__text">
            <div id="YourXMRMinedWorthUSD">0</div>
        </div>
    </div>

</div>

<div class="roominfowrapper">
    <div class="showControls" id="RoomName"></div>

    <div class="descriptionWrapper">

        @{
            if (SignalRService.Utils.ServiceUtils.IsServiceOwner(Model.Id, User.Identity.Name))
            {
                <!-- Markdown Editor-->
                <div class="mdd_toolbar"></div>
                <textarea cols=50 rows=10 class="mdd_editor">
                @description
                </textarea>
                <div class="mdd_resizer"></div>
                <div class="mdd_preview">

                </div>



                <button class="mdl-button mdl-js-button" onclick="editorSave()">
                    <i class="far fa-save" title="@BaseResource.Get("TitleSave")"></i>
                </button>

            }



            <div id="RoomDescription">@Html.Raw(md.Transform(description)) </div>

        }


    </div>

    <!-- RoomHps Chip -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleRoomHps")" class="fab fa-galactic-senate"></i>
        </div>
        <div class="mdl-chip__text">
            <div id="RoomHps">0</div>
        </div>
    </div>


    <!-- JSEMined Chip -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleRoomJSEMined")" class="fab fa-monero"></i>
        </div>
        <div class="mdl-chip__text">
            <div class="normalValueFont" id="JSEMined">0</div>
        </div>
    </div>


    <!-- JSE worth BTC -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleJSEWorthBitcoin")" class="fab fa-bitcoin"></i>
        </div>
        <div class="mdl-chip__text">
            <div class="normalValueFont" id="JSEMinedWorthBTC">0</div>
        </div>
    </div>

    <!-- JSE worth EUR -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleJSEWorthEUR")" class="fas fa-euro-sign"></i>
        </div>
        <div class="mdl-chip__text">
            <div class="normalValueFont" id="JSEMinedWorthEUR">0</div>
        </div>
    </div>



    <!-- JSE worth USD -->
    <div class="mdl-chip mdl-chip--contact showControls">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleJSEWorthUSD")" class="fas fa-dollar-sign"></i>
        </div>
        <div class="mdl-chip__text">
            <div class="normalValueFont" id="JSEMinedWorthUSD"></div>
        </div>
    </div>


    <div id="XMRNeeded"></div>

    <!-- create room Chip -->
    <div class="mdl-chip mdl-chip--contact showControls" onclick="CreateRoomBtnClicked()">
        <div class="mdl-chip__contact mdl-color--teal mdl-color-text--white">
            <i title="@BaseResource.Get("TitleAddMiningRoom") " class="far fa-plus-square"></i>
        </div>
        <div class="mdl-chip__text">
            @BaseResource.Get("TextAddMiningRoom")
        </div>
    </div>

</div>

@Html.Partial("AddMiningRoom")

@{
    if (SignalRService.Utils.ServiceUtils.IsServiceOwner(Model.Id, User.Identity.Name))
    {
        <text>
            <div id="debugDiv"></div>
        </text>
    }
}



