
@{
    ViewBag.Title = "Seeding";
}

<h2>...</h2>

@Ajax.ActionLink("SeedGeneralSettings", "SeedGeneralSettings", null,  new AjaxOptions() { InsertionMode = InsertionMode.Replace }, new { id = "testseedbtn", @class = "btn btn-primary" })
@Ajax.ActionLink("Seed TestData", "SeedTestData", null, new AjaxOptions() { OnSuccess = "onSuccess", HttpMethod = "GET" }, new { id = "testseedbtn", @class = "btn btn-primary" })

@Ajax.ActionLink("Seed Localization", "SeedLocalization", null, new AjaxOptions() { OnSuccess = "onSuccess", HttpMethod = "GET" }, new { id = "locseedbtn", @class = "btn btn-primary" })
@Ajax.ActionLink("Save Localization", "SaveLocalization", null, new AjaxOptions() { OnSuccess = "onSuccess", HttpMethod = "GET" }, new { id = "locsavebtn", @class = "btn btn-primary" })

@Ajax.ActionLink("Add CK-User as admin", "AddChkAdminUser", null, new AjaxOptions() { OnSuccess = "onSuccess", HttpMethod = "GET" }, new { id = "cuabtn", @class = "btn btn-primary" })

@Ajax.ActionLink("Create Lucene-Index", "CreateLuceneIndex", null, new AjaxOptions() { OnSuccess = "onSuccess", HttpMethod = "GET" }, new { id = "cuabtn", @class = "btn btn-primary" })
@Ajax.ActionLink("Clear Lucene-Index", "ClearLuceneIndex", null, new AjaxOptions() { OnSuccess = "onSuccess", HttpMethod = "GET" }, new { id = "cuabtn", @class = "btn btn-primary" })
@Ajax.ActionLink("Optimize Lucene-Index", "OptimizeLuceneIndex", null, new AjaxOptions() { OnSuccess = "onSuccess", HttpMethod = "GET" }, new { id = "cuabtn", @class = "btn btn-primary" })


<ul>
    <li><a href="@Url.Content("~/UserRoles/ExportAspNetUserXML")">download AspNetUserData</a></li>
    <li><a href="@Url.Content("~/ServiceConfiguration/DownloadServiceXML")">download ServicesData</a></li>
    <li><a href="@Url.Content("~/ServiceConfiguration/DownloadPredefinedMinerClientXML")">download PredefinedMinerClientData</a></li>
</ul>

<style>
    .serviceimportarea {
        background-color:green;
        width: 350px;
        height: 50px;
        margin:2px;
    }
    .predefinedminerclientimportarea {
        background-color: green;
        width: 350px;
        height: 50px;
        margin: 2px;
    }
    .userdataimportarea {
        background-color: green;
        width: 350px;
        height: 50px;
        margin: 2px;
    }

</style>

<div class="userdataimportarea" id="userdataimportarea" ondrop="userImportDrop(event)" ondragover="userImportAllowDrop(event)">
    Drop UserData here.
</div>
<div class="serviceimportarea" id="serviceimport" ondrop="serviceImportDrop(event)" ondragover="serviceImportAllowDrop(event)">
    Drop Service-xml here.
</div>
<div class="predefinedminerclientimportarea" id="predefinedminerclientimportarea" ondrop="predefinedminerclientimportareaDrop(event)" ondragover="predefinedminerclientimportareaAllowDrop(event)">
    Drop PredefinedMinerClient-xml here.
</div>


<script>
    function onSuccess() {
        alert("success called...");
    }

    function predefinedminerclientimportareaAllowDrop(e) {
        e.preventDefault();
    }
    function serviceImportAllowDrop(e) {
        e.preventDefault();
    }
    function userImportAllowDrop(e) {
        e.preventDefault();
    }

    function predefinedminerclientimportareaDrop(e) {
         console.log('File(s) dropped');
        e.preventDefault();

        var selectedFiles = e.dataTransfer.files;
        var fdata = new FormData();
        for (var i = 0; i < selectedFiles.length; i++) {
            fdata.append(selectedFiles[i].name, selectedFiles[i]);
        }

        var request = new XMLHttpRequest();
        request.open("POST", "@Url.Content("~/ServiceConfiguration/ImportPredefinedMinerClientXML")");
        request.onload = function () {
            console.log("request success: " + request.response);
        };
        request.onerror = function () {
            console.log("error in request");
        }
        request.send(fdata);
    }

    function userImportDrop(e) {
        console.log('File(s) dropped');
        e.preventDefault();

        var selectedFiles = e.dataTransfer.files;
        var fdata = new FormData();
        for (var i = 0; i < selectedFiles.length; i++) {
            fdata.append(selectedFiles[i].name, selectedFiles[i]);
        }

        var request = new XMLHttpRequest();
        request.open("POST", "@Url.Content("~/UserRoles/ImportAspNetUserXML")");
        request.onload = function () {
            console.log("request success: " + request.response);
        };
        request.onerror = function () {
            console.log("error in request");
        }
        request.send(fdata);
    }


    function serviceImportDrop(e) {
        console.log('File(s) dropped');
        e.preventDefault();

        var selectedFiles = e.dataTransfer.files;
        var fdata = new FormData();
        for (var i = 0; i < selectedFiles.length; i++) {
            fdata.append(selectedFiles[i].name, selectedFiles[i]);
        }

        var request = new XMLHttpRequest();
        request.open("POST", "@Url.Content("~/ServiceConfiguration/ImportServiceXML")");
        request.onload = function () {
            console.log("request success: " + request.response);
        };
        request.onerror = function () {
            console.log("error in request");
        }
        request.send(fdata);

    }

</script>